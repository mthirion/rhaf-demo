%dev.quarkus.log.level=DEBUG

## OCP deployment
quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.env.configmaps=kafka-consumer-config

#quarkus.devservices.enabled=true
#quarkus.kafka.devservices.port=9092

mp.messaging.incoming.event.connector=smallrye-kafka
mp.messaging.incoming.event.topic=${CONSUMER_TOPIC:event}
mp.messaging.incoming.event.group.id=kafka-consumer-lag
mp.messaging.incoming.event.key.serializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.event.value.serializer=org.apache.kafka.common.serialization.StringDeserializer

# Authentication
#mp.messaging.connector.smallrye-kafka.security.protocol=SASL_PLAINTEXT
#mp.messaging.connector.smallrye-kafka.sasl.mechanism=SCRAM-SHA-512
#mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="quarkus-consumer" password="e1E4DKzQ8izX";


mp.messaging.incoming.event.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.event.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://service-registry.apps.cluster-qrc9q.qrc9q.sandbox1217.opentlc.com.router-default.apps.cluster-qrc9q.qrc9q.sandbox1217.opentlc.com/
#kafka.apicurio.registry.auto-register=true

# Distributed tracing
#quarkus.application.name=kafka-consumer
#quarkus.opentelemetry.enabled=true
#quarkus.opentelemetry.tracer.exporter.otlp.endpoint=${COLLECTOR_ENDPOINT:http://jaeger-all-in-one-inmemory-collector:4317}
